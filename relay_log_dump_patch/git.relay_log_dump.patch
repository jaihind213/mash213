diff --git a/mysql/percona_server_src/Percona-Server-5.5.27-rel28.1/include/mysql.h.pp b/mysql/percona_server_src/Percona-Server-5.5.27-rel28.1/include/mysql.h.pp
index 7bd6875..c2c5ba3 100644
--- a/mysql/percona_server_src/Percona-Server-5.5.27-rel28.1/include/mysql.h.pp
+++ b/mysql/percona_server_src/Percona-Server-5.5.27-rel28.1/include/mysql.h.pp
@@ -10,7 +10,7 @@ enum enum_server_command
   COM_TIME, COM_DELAYED_INSERT, COM_CHANGE_USER, COM_BINLOG_DUMP,
   COM_TABLE_DUMP, COM_CONNECT_OUT, COM_REGISTER_SLAVE,
   COM_STMT_PREPARE, COM_STMT_EXECUTE, COM_STMT_SEND_LONG_DATA, COM_STMT_CLOSE,
-  COM_STMT_RESET, COM_SET_OPTION, COM_STMT_FETCH, COM_DAEMON, COM_RELAYLOG_DUMP,
+  COM_STMT_RESET, COM_SET_OPTION, COM_STMT_FETCH, COM_DAEMON,
   COM_END
 };
 struct st_vio;
diff --git a/mysql/percona_server_src/Percona-Server-5.5.27-rel28.1/include/mysql_com.h b/mysql/percona_server_src/Percona-Server-5.5.27-rel28.1/include/mysql_com.h
index 56c902c..a80cc52 100644
--- a/mysql/percona_server_src/Percona-Server-5.5.27-rel28.1/include/mysql_com.h
+++ b/mysql/percona_server_src/Percona-Server-5.5.27-rel28.1/include/mysql_com.h
@@ -71,7 +71,7 @@ enum enum_server_command
   COM_TIME, COM_DELAYED_INSERT, COM_CHANGE_USER, COM_BINLOG_DUMP,
   COM_TABLE_DUMP, COM_CONNECT_OUT, COM_REGISTER_SLAVE,
   COM_STMT_PREPARE, COM_STMT_EXECUTE, COM_STMT_SEND_LONG_DATA, COM_STMT_CLOSE,
-  COM_STMT_RESET, COM_SET_OPTION, COM_STMT_FETCH, COM_DAEMON, COM_RELAYLOG_DUMP,
+  COM_STMT_RESET, COM_SET_OPTION, COM_STMT_FETCH, COM_DAEMON,
   /* don't forget to update const char *command_name[] in sql_parse.cc */
 
   /* Must be last */
diff --git a/mysql/percona_server_src/Percona-Server-5.5.27-rel28.1/sql/log.cc b/mysql/percona_server_src/Percona-Server-5.5.27-rel28.1/sql/log.cc
index 04d960e..422924b 100644
--- a/mysql/percona_server_src/Percona-Server-5.5.27-rel28.1/sql/log.cc
+++ b/mysql/percona_server_src/Percona-Server-5.5.27-rel28.1/sql/log.cc
@@ -3334,7 +3334,7 @@ err:
 */
 
 int MYSQL_BIN_LOG::find_log_pos(LOG_INFO *linfo, const char *log_name,
-			    bool need_lock, ushort is_request_relay_log)
+			    bool need_lock)
 {
   int error= 0;
   char *full_fname= linfo->log_file_name;
@@ -3350,16 +3350,17 @@ int MYSQL_BIN_LOG::find_log_pos(LOG_INFO *linfo, const char *log_name,
   if (need_lock)
     mysql_mutex_lock(&LOCK_index);
   mysql_mutex_assert_owner(&LOCK_index);
+
   // extend relative paths for log_name to be searched
   if (log_name)
   {
-    if(normalize_binlog_name(full_log_name, log_name, is_relay_log | is_request_relay_log ))
+    if(normalize_binlog_name(full_log_name, log_name, is_relay_log))
     {
       error= LOG_INFO_EOF;
       goto end;
     }
   }
- 
+
   log_name_len= log_name ? (uint) strlen(full_log_name) : 0;
   DBUG_PRINT("enter", ("log_name: %s, full_log_name: %s", 
                        log_name ? log_name : "NULL", full_log_name));
@@ -3383,12 +3384,13 @@ int MYSQL_BIN_LOG::find_log_pos(LOG_INFO *linfo, const char *log_name,
     }
 
     // extend relative paths and match against full path
-    if (normalize_binlog_name(full_fname, fname, is_relay_log | is_request_relay_log))
+    if (normalize_binlog_name(full_fname, fname, is_relay_log))
     {
       error= LOG_INFO_EOF;
       break;
     }
     fname_len= (uint) strlen(full_fname);
+
     // if the log entry matches, null string matching anything
     if (!log_name ||
 	(log_name_len == fname_len-1 && full_fname[log_name_len] == '\n' &&
diff --git a/mysql/percona_server_src/Percona-Server-5.5.27-rel28.1/sql/log.h b/mysql/percona_server_src/Percona-Server-5.5.27-rel28.1/sql/log.h
index 348fdc3..6e194b3 100644
--- a/mysql/percona_server_src/Percona-Server-5.5.27-rel28.1/sql/log.h
+++ b/mysql/percona_server_src/Percona-Server-5.5.27-rel28.1/sql/log.h
@@ -586,7 +586,7 @@ public:
 
   // iterating through the log index file
   int find_log_pos(LOG_INFO* linfo, const char* log_name,
-		   bool need_mutex, ushort is_request_relay_log=0);
+		   bool need_mutex);
   int find_next_log(LOG_INFO* linfo, bool need_mutex);
   int get_current_log(LOG_INFO* linfo);
   int raw_get_current_log(LOG_INFO* linfo);
diff --git a/mysql/percona_server_src/Percona-Server-5.5.27-rel28.1/sql/sql_parse.cc b/mysql/percona_server_src/Percona-Server-5.5.27-rel28.1/sql/sql_parse.cc
index c6c2205..f821468 100644
--- a/mysql/percona_server_src/Percona-Server-5.5.27-rel28.1/sql/sql_parse.cc
+++ b/mysql/percona_server_src/Percona-Server-5.5.27-rel28.1/sql/sql_parse.cc
@@ -153,7 +153,6 @@ const LEX_STRING command_name[]={
   { C_STRING_WITH_LEN("Set option") },
   { C_STRING_WITH_LEN("Fetch") },
   { C_STRING_WITH_LEN("Daemon") },
-  { C_STRING_WITH_LEN("Relaylog Dump") },
   { C_STRING_WITH_LEN("Error") }  // Last command number
 };
 
@@ -1245,34 +1244,6 @@ bool dispatch_command(enum enum_server_command command, THD *thd,
       error = TRUE;
       break;
     }
-  case COM_RELAYLOG_DUMP:
-    {
-      fprintf(stderr, "Received request for Relay Log [COM_RELAYLOG_DUMP EVENT]\n");
-      ulong pos;
-      ushort flags;
-      uint32 slave_server_id;
-
-      status_var_increment(thd->status_var.com_other);
-      thd->enable_slow_log= opt_log_slow_admin_statements;
-      if (check_global_access(thd, REPL_SLAVE_ACL))
-	break;
-
-      /* TODO: The following has to be changed to an 8 byte integer */
-      pos = uint4korr(packet);
-      flags = uint2korr(packet + 4);
-      thd->server_id=0; /* avoid suicide */
-      if ((slave_server_id= uint4korr(packet+6))) // mysqlbinlog.server_id==0
-	kill_zombie_dump_threads(slave_server_id);
-      thd->server_id = slave_server_id;
-
-      general_log_print(thd, command, "Log: '%s'  Pos: %ld", packet+10,
-                      (long) pos);
-      mysql_binlog_send(thd, thd->strdup(packet + 10), (my_off_t) pos, flags, 1);
-      unregister_slave(thd,1,1);
-      /*  fake COM_QUIT -- if we get here, the thread needs to terminate */
-      error = TRUE;
-      break;
-    }
 #endif
   case COM_REFRESH:
   {
diff --git a/mysql/percona_server_src/Percona-Server-5.5.27-rel28.1/sql/sql_repl.cc b/mysql/percona_server_src/Percona-Server-5.5.27-rel28.1/sql/sql_repl.cc
index 7fa60ab..16b6a75 100644
--- a/mysql/percona_server_src/Percona-Server-5.5.27-rel28.1/sql/sql_repl.cc
+++ b/mysql/percona_server_src/Percona-Server-5.5.27-rel28.1/sql/sql_repl.cc
@@ -434,21 +434,12 @@ static int send_heartbeat_event(NET* net, String* packet,
 */
 
 void mysql_binlog_send(THD* thd, char* log_ident, my_off_t pos,
-		       ushort flags, ushort is_request_relay_log)
+		       ushort flags)
 {
   LOG_INFO linfo;
   char *log_file_name = linfo.log_file_name;
   char search_file_name[FN_REFLEN], *name;
 
-  ///set pointer according to request, i.e. request for relay or bin log.
-  MYSQL_BIN_LOG *replication_log;   //pointer to either a relay_log or bin_log
-  replication_log = &(mysql_bin_log);
-  if(is_request_relay_log)
-  {
-     replication_log = &(active_mi->rli.relay_log);
-  }
-  ///set pointer according to request, i.e. request for relay or bin log.
-
   ulong ev_offset;
 
   IO_CACHE log;
@@ -504,7 +495,7 @@ void mysql_binlog_send(THD* thd, char* log_ident, my_off_t pos,
   }
 #endif
 
-  if (!replication_log->is_open())
+  if (!mysql_bin_log.is_open())
   {
     errmsg = "Binary log is not open";
     my_errno= ER_MASTER_FATAL_ERROR_READING_BINLOG;
@@ -519,13 +510,13 @@ void mysql_binlog_send(THD* thd, char* log_ident, my_off_t pos,
 
   name=search_file_name;
   if (log_ident[0])
-    replication_log->make_log_name(search_file_name, log_ident);
+    mysql_bin_log.make_log_name(search_file_name, log_ident);
   else
     name=0;					// Find first log
 
   linfo.index_file_offset = 0;
 
-  if (replication_log->find_log_pos(&linfo, name, 1, is_request_relay_log))
+  if (mysql_bin_log.find_log_pos(&linfo, name, 1))
   {
     errmsg = "Could not find first log file name in binary log index file";
     my_errno= ER_MASTER_FATAL_ERROR_READING_BINLOG;
@@ -605,8 +596,8 @@ impossible position";
     only at shutdown).
   */
   p_coord->pos= pos; // the first hb matches the slave's last seen value
-  log_lock= replication_log->get_log_lock();
-  log_cond= replication_log->get_log_cond();
+  log_lock= mysql_bin_log.get_log_lock();
+  log_cond= mysql_bin_log.get_log_cond();
   if (pos > BIN_LOG_HEADER_SIZE)
   {
     /* reset transmit packet for the event read from binary log
@@ -806,7 +797,7 @@ impossible position";
       goto err;
 
     if (!(flags & BINLOG_DUMP_NON_BLOCK) &&
-        replication_log->is_active(log_file_name))
+        mysql_bin_log.is_active(log_file_name))
     {
       /*
 	Block until there is more data in the log
@@ -877,7 +868,7 @@ impossible position";
           ulong hb_info_counter= 0;
 #endif
           const char* old_msg= thd->proc_info;
-          signal_cnt= replication_log->signal_cnt;
+          signal_cnt= mysql_bin_log.signal_cnt;
           do 
           {
             if (heartbeat_period != 0)
@@ -888,7 +879,7 @@ impossible position";
             thd->enter_cond(log_cond, log_lock,
                             "Master has sent all binlog to slave; "
                             "waiting for binlog to be updated");
-            ret= replication_log->wait_for_update_bin_log(thd, heartbeat_ts);
+            ret= mysql_bin_log.wait_for_update_bin_log(thd, heartbeat_ts);
             DBUG_ASSERT(ret == 0 || (heartbeat_period != 0));
             if (ret == ETIMEDOUT || ret == ETIME)
             {
@@ -919,7 +910,7 @@ impossible position";
             {
               DBUG_PRINT("wait",("binary log received update or a broadcast signal caught"));
             }
-          } while (signal_cnt == replication_log->signal_cnt && !thd->killed);
+          } while (signal_cnt == mysql_bin_log.signal_cnt && !thd->killed);
           thd->exit_cond(old_msg);
         }
         break;
@@ -976,11 +967,11 @@ impossible position";
       /* need this to break out of the for loop from switch */
 
       thd_proc_info(thd, "Finished reading one binlog; switching to next binlog");
-      switch (replication_log->find_next_log(&linfo, 1)) {
+      switch (mysql_bin_log.find_next_log(&linfo, 1)) {
       case 0:
 	break;
       case LOG_INFO_EOF:
-        if (replication_log->is_active(log_file_name))
+        if (mysql_bin_log.is_active(log_file_name))
         {
           loop_breaker = (flags & BINLOG_DUMP_NON_BLOCK);
           break;
diff --git a/mysql/percona_server_src/Percona-Server-5.5.27-rel28.1/sql/sql_repl.h b/mysql/percona_server_src/Percona-Server-5.5.27-rel28.1/sql/sql_repl.h
index f5a9464..7dc58c4 100644
--- a/mysql/percona_server_src/Percona-Server-5.5.27-rel28.1/sql/sql_repl.h
+++ b/mysql/percona_server_src/Percona-Server-5.5.27-rel28.1/sql/sql_repl.h
@@ -63,7 +63,7 @@ typedef struct st_load_file_info
 
 int log_loaded_block(IO_CACHE* file);
 int init_replication_sys_vars();
-void mysql_binlog_send(THD* thd, char* log_ident, my_off_t pos, ushort flags, ushort is_request_relay_log=0);
+void mysql_binlog_send(THD* thd, char* log_ident, my_off_t pos, ushort flags);
 
 #endif /* HAVE_REPLICATION */
 
